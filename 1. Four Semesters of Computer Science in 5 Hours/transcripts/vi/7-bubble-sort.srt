1
00:00:00,000 --> 00:00:03,863
[ÂM NHẠC]

2
00:00:03,863 --> 00:00:06,521
>> Brian Holt: Chúng tôi sẽ để lại đệ quy sau một chút,

3
00:00:06,521 --> 00:00:10,472
nói cách khác, không sử dụng đệ quy cho đến khi tôi nói với bạn rằng chúng tôi sẽ sử dụng đệ quy.

4
00:00:11,510 --> 00:00:14,713
Tất cả những điều này sẽ được thực hiện bằng cách sử dụng các vòng lặp, nhưng

5
00:00:14,713 --> 00:00:19,233
đệ quy là một khối xây dựng mà chúng ta cần có trong khả năng của mình

6
00:00:19,233 --> 00:00:22,375
để có thể thực hiện một số vấn đề khác này.

7
00:00:22,375 --> 00:00:28,391
Vì vậy, rất nhiều thuật toán đi xuống để phân loại.

8
00:00:28,391 --> 00:00:32,909
Đó là bởi vì sắp xếp các số là một điều rất hữu ích trong khoa học máy tính và

9
00:00:32,909 --> 00:00:36,110
có nhiều cách để lột da mèo trong trường hợp cụ thể này.

10
00:00:37,230 --> 00:00:39,839
Đầu tiên chúng ta sẽ nói đến là phân loại bong bóng.

11
00:00:41,590 --> 00:00:43,228
Sắp xếp bong bóng không hữu ích.

12
00:00:43,228 --> 00:00:49,280
[LAUGH] Như trong bạn sẽ không bao giờ sử dụng sắp xếp bong bóng trong mã sản xuất.

13
00:00:49,280 --> 00:00:52,402
Tuy nhiên, nó là một công cụ học tập rất hữu ích vì nó rất tốt

14
00:00:52,402 --> 00:00:56,461
áp dụng cho cách mà chúng ta là con người nghĩ về việc sắp xếp các con số trong đầu, phải không?

15
00:00:56,461 --> 00:01:03,995
Ý chính cơ bản của cửa hàng bong bóng là tôi có, hãy xem, sơ đồ ra.

16
00:01:11,890 --> 00:01:12,922
>> Brian Holt: Và bút, màu đen, chúng ta bắt đầu.

17
00:01:12,922 --> 00:01:17,755
Được rồi, nếu tôi có các số như 5,

18
00:01:17,755 --> 00:01:21,198
tốt đấy. >> Người nói 2: Này,

19
00:01:21,198 --> 00:01:21,960
Brian? >> Brian Holt: Vâng.

20
00:01:21,960 --> 00:01:22,727
>> Diễn giả 2: Trước khi chúng tôi nhận được

21
00:01:22,727 --> 00:01:25,863
quá xa về vấn đề này, chúng tôi vẫn có một câu hỏi về

22
00:01:25,863 --> 00:01:27,061
tập thể dục. >> Brian Holt: Chắc chắn.

23
00:01:27,061 --> 00:01:29,797
>> Người nói 2: Damien đang hỏi,

24
00:01:29,797 --> 00:01:36,980
anh ta đang tự hỏi nếu n ít hơn hai return n hoạt động?

25
00:01:36,980 --> 00:01:41,865
Anh ấy nói rằng tất cả các bài kiểm tra đều vượt qua. >> Brian Holt: n ít hơn hai,

26
00:01:41,865 --> 00:01:44,508
vâng, điều đó hoàn toàn hiệu quả. >> Người nói 2: Được rồi.

27
00:01:44,508 --> 00:01:47,377
>> Brian Holt: Vâng, có thể hơi

28
00:01:47,377 --> 00:01:53,350
kém hiệu quả hơn nhưng bạn có một cuộc gọi bổ sung, phải không?

29
00:01:53,350 --> 00:01:56,815
Vì vậy, có thể nếu ngăn xếp cuộc gọi của bạn ở 255 và nó được đẩy lên 256 và

30
00:01:56,815 --> 00:01:59,524
bạn bị tràn ngăn xếp, nó có thể là một vấn đề, nhưng

31
00:01:59,524 --> 00:02:02,866
nếu điều đó có ý nghĩa hơn với bạn, tôi nghĩ điều đó hoàn toàn ổn.

32
00:02:02,866 --> 00:02:06,390
Có lẽ lý do tại sao tôi lại sai khi sử dụng một cái là nó rất

33
00:02:06,390 --> 00:02:07,422
rõ ràng, phải không?

34
00:02:07,422 --> 00:02:12,320
Rất dễ dàng cho một người nào đó đến sau, người giống như vậy, nó chỉ trả lại một cái, phải không?

35
00:02:12,320 --> 00:02:13,746
Trong khi họ phải lý luận về nó,

36
00:02:13,746 --> 00:02:16,921
không sao cả, nếu nó ít hơn hai thì nó sẽ trả về một, phải không?

37
00:02:16,921 --> 00:02:18,840
Họ phải suy luận về điều đó.

38
00:02:18,840 --> 00:02:21,414
Điều đó không khó nhưng điều đó phù hợp với bạn,

39
00:02:21,414 --> 00:02:26,456
sau đó nhiều quyền lực hơn cho bạn. >> Brian Holt: Câu hỏi hay,

40
00:02:26,456 --> 00:02:29,960
được rồi, vậy hãy nói về phân loại bong bóng ở đây.

41
00:02:29,960 --> 00:02:34,420
Vì vậy, nếu chúng ta có một danh sách gồm 5, 7, 6, được không?

42
00:02:38,510 --> 00:02:41,467
Sắp xếp bong bóng là nơi chúng ta sẽ so sánh hai số cùng một lúc và

43
00:02:41,467 --> 00:02:44,006
sau đó chúng tôi sẽ hoán đổi chúng nếu chúng không đúng thứ tự.

44
00:02:44,006 --> 00:02:47,359
Hãy thực sự làm điều này vì vậy 4 cũng ở đây.

45
00:02:47,359 --> 00:02:52,786
Được rồi, vì vậy chúng ta sẽ có một vòng lặp bên ngoài sẽ xoay quanh các con số và

46
00:02:52,786 --> 00:02:57,570
một vòng lặp bên trong sẽ so sánh những con số đó, phải không?

47
00:02:57,570 --> 00:03:02,810
Vì vậy, vòng lặp bên ngoài sẽ đi qua, tôi đã giải thích điều đó không chính xác.

48
00:03:02,810 --> 00:03:06,040
Vì vậy, vòng lặp bên ngoài tiếp tục chạy

49
00:03:06,040 --> 00:03:09,380
miễn là có các số được hoán đổi trong lần lặp trước, phải không?

50
00:03:09,380 --> 00:03:12,330
Vì vậy, vòng lặp bên ngoài sẽ luôn chạy ít nhất một lần.

51
00:03:12,330 --> 00:03:13,700
Vòng lặp bên trong sẽ đi qua và

52
00:03:13,700 --> 00:03:16,480
hoán đổi số nếu chúng không theo thứ tự, được không?

53
00:03:16,480 --> 00:03:19,750
Vì vậy, 5 và 7, theo thứ tự, không hoán đổi.

54
00:03:19,750 --> 00:03:22,590
7 và 6 không theo thứ tự, vì vậy chúng ta sẽ hoán đổi chúng.

55
00:03:22,590 --> 00:03:29,490
Vì vậy, nó chỉ là 5 và sau đó chúng ta sẽ hoán đổi thành 6 và 7, phải không?

56
00:03:30,910 --> 00:03:34,850
Và sau đó tại điểm 7 và 4 không theo thứ tự.

57
00:03:34,850 --> 00:03:36,220
Vì vậy, chúng tôi cũng sẽ hoán đổi chúng.

58
00:03:36,220 --> 00:03:39,805
Vì vậy, nó sẽ là 4, 7, phải không?

59
00:03:39,805 --> 00:03:46,930
Và vào cuối lần lặp đầu tiên của chúng ta, nó sẽ là 5, 6, 4, 7, phải không?

60
00:03:46,930 --> 00:03:49,290
Bây giờ một cái gì đó đã được hoán đổi trong lần lặp lại trước đó

61
00:03:49,290 --> 00:03:50,360
chúng tôi sẽ làm điều đó một lần nữa.

62
00:03:50,360 --> 00:03:55,539
Vì vậy, tôi sẽ xóa điều này và làm điều đó một lần nữa. >> Brian Holt: Vì vậy

63
00:03:55,539 --> 00:04:00,005
Tôi nghĩ đó là 5, 6,

64
00:04:00,005 --> 00:04:05,183
4, 7 cảm ơn bạn, được không?

65
00:04:05,183 --> 00:04:08,549
Vì vậy, chúng tôi sẽ chạy cùng một thuật toán, 5 và 6 vẫn theo thứ tự những thuật toán đó được đưa xuống.

66
00:04:08,549 --> 00:04:13,751
6 và 4, những thứ đó đã hết đơn đặt hàng o chúng tôi sẽ hoán đổi chúng.

67
00:04:13,751 --> 00:04:18,096
5 hoặc 4, 6, và đó là theo thứ tự,

68
00:04:18,096 --> 00:04:22,590
thứ gì đó đã được hoán đổi trong lần lặp trước.

69
00:04:22,590 --> 00:04:27,042
Vì vậy, trong trường hợp cụ thể này, chúng ta sẽ làm 4, 5, 6, 7,

70
00:04:27,042 --> 00:04:30,405
vì những cái đó vẫn còn thứ tự.

71
00:04:30,405 --> 00:04:32,595
Bây giờ, nó theo thứ tự ngay bây giờ, phải không?

72
00:04:32,595 --> 00:04:36,165
Chúng ta biết rằng nhìn vào nó, tuy nhiên, máy tính vẫn chưa biết điều đó, phải không?

73
00:04:36,165 --> 00:04:38,166
Vì vậy, một cái gì đó đã hoán đổi trong lần lặp trước đó để

74
00:04:38,166 --> 00:04:39,506
nó sẽ trải qua một lần nữa.

75
00:04:39,506 --> 00:04:42,932
Và bởi vì không có gì sẽ hoán đổi trong lần lặp cuối cùng đó, nên [SOUND] không sao, đã xong.

76
00:04:42,932 --> 00:04:44,828
Và sau đó sắp xếp bong bóng đã hoàn thành.

77
00:04:44,828 --> 00:04:49,435
Vì vậy, để tóm tắt lại bạn có một vòng lặp bên ngoài.

78
00:04:49,435 --> 00:04:54,450
Nó sẽ là một vòng lặp while chạy một lần, phải không?

79
00:04:54,450 --> 00:04:57,760
Chạy ít nhất một lần, đó là vòng lặp do-while, phải không?

80
00:04:57,760 --> 00:05:00,360
Hầu hết chúng ta không sử dụng vòng lặp do nhiều trong JavaScript.

81
00:05:00,360 --> 00:05:04,204
Tôi thực sự không thể nhớ được thời gian nếu tôi đã từng làm vòng lặp một cách chuyên nghiệp

82
00:05:04,204 --> 00:05:05,735
nhưng chúng tôi sẽ sử dụng nó ở đây.

83
00:05:05,735 --> 00:05:08,866
Bạn cũng có thể lập mô hình đó bằng vòng lặp while, nhưng

84
00:05:08,866 --> 00:05:13,820
đây là một trong những lần duy nhất bạn sử dụng vòng lặp do để bạn cũng có thể làm được.

85
00:05:15,190 --> 00:05:17,883
Được rồi, bạn sẽ đến vòng lặp do-while, nơi vòng lặp bên ngoài sẽ đi

86
00:05:17,883 --> 00:05:19,789
trong khi một cái gì đó đã được hoán đổi, phải không?

87
00:05:19,789 --> 00:05:24,477
Và sau đó bạn có vòng lặp bên trong sẽ đi qua và nói, là x và

88
00:05:24,477 --> 00:05:27,612
x, hoặc n, n và n cộng với một là chúng không theo thứ tự?

89
00:05:27,612 --> 00:05:29,327
Được rồi, đổi chỗ cho nhau, phải không?

90
00:05:29,327 --> 00:05:32,143
Để lại nó, và sau đó nó chỉ tiếp tục và

91
00:05:32,143 --> 00:05:36,170
tiếp tục hoán đổi mọi thứ cho đến khi chúng trở lại theo thứ tự.

92
00:05:36,170 --> 00:05:41,020
Bạn thấy ở đây loại biểu đồ này cho bạn thấy nó trông như thế nào theo thời gian.

93
00:05:47,050 --> 00:05:49,010
Vậy Big O trên này là gì?

94
00:05:49,010 --> 00:05:54,100
Chúng ta có một vòng lặp do-while bên ngoài và chúng ta có một vòng lặp for bên trong, phải không?

95
00:05:54,100 --> 00:05:55,204
Vậy điều đó rốt cuộc là gì?

96
00:05:55,204 --> 00:05:58,867
n bình phương, phải, vì chúng ta có một vòng lặp bên trong và một vòng lặp bên ngoài.

97
00:05:58,867 --> 00:06:03,379
Và đây là một thuật toán cực kỳ kém hiệu quả nhưng

98
00:06:03,379 --> 00:06:08,990
hy vọng bây giờ bạn đã hình dung chính xác cách thức hoạt động của nó.

99
00:06:08,990 --> 00:06:10,220
Vì vậy, nó là một công cụ giảng dạy tốt.